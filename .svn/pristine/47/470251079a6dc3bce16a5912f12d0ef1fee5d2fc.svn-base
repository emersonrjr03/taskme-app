package com.herms.taskme.model;

import javax.persistence.*;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;
import java.io.Serializable;
import java.util.List;
import java.util.Objects;

@Entity
@Table(name = "WORKSHEET")
@XmlRootElement
@NamedQueries({
        @NamedQuery(name = "Worksheet.findAll", query = "SELECT worksheet FROM Worksheet worksheet")
        , @NamedQuery(name = "Worksheet.findByUser", query = "SELECT worksheet FROM Worksheet worksheet WHERE worksheet.user = :user")})
public class Worksheet implements Serializable{

    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(generator = "SQ_WORKSHEET")
    @SequenceGenerator(name = "SQ_WORKSHEET", sequenceName = "SQ_WORKSHEET", allocationSize = 1)
    private Long id;
    @Size(min = 1, max = 150)
    @Column(name = "DESCRIPTION", nullable = false)
    private String description;
    @Size(min = 1, max = 150)
    @Column(name = "HOME_BASED", nullable = false)
    private String homeBased;
    @OneToOne(fetch = FetchType.EAGER, cascade = CascadeType.ALL)
    @JoinColumn(name = "PRICE_TABLE", referencedColumnName = "ID")
    private PriceTable priceTable;
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "T_USER", referencedColumnName = "ID")
    private User user;
    @ManyToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
    @JoinTable(
            name = "WORKSHEET_MEDIA",
            joinColumns = { @JoinColumn(name = "WORKSHEET", referencedColumnName = "ID") },
            inverseJoinColumns = { @JoinColumn(name = "MEDIA", referencedColumnName = "ID") }
    )
    private List<Media> mediaList;

    public Worksheet(){
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getHomeBased() {
        return homeBased;
    }

    public void setHomeBased(String homeBased) {
        this.homeBased = homeBased;
    }

    public PriceTable getPriceTable() {
        return priceTable;
    }

    public void setPriceTable(PriceTable priceTable) {
        this.priceTable = priceTable;
    }
    @XmlTransient
    public User getUser() {
        return user;
    }

    public void setUser(User user) {
        this.user = user;
    }
    @XmlTransient
    public List<Media> getMediaList() {
        return mediaList;
    }

    public void setMediaList(List<Media> mediaList) {
        this.mediaList = mediaList;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Worksheet)) return false;
        Worksheet worksheet = (Worksheet) o;
        return Objects.equals(getId(), worksheet.getId()) &&
                Objects.equals(getDescription(), worksheet.getDescription()) &&
                Objects.equals(getHomeBased(), worksheet.getHomeBased()) &&
                Objects.equals(getPriceTable(), worksheet.getPriceTable()) &&
                Objects.equals(getUser(), worksheet.getUser());
    }

    @Override
    public int hashCode() {

        return Objects.hash(getId(), getDescription(), getHomeBased());
    }
}
